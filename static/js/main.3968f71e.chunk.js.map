{"version":3,"sources":["Context1.jsx","components/Contacts/Contact.jsx","components/Contacts/Contacts.jsx","components/Layout/Header.jsx","components/Layout/TextInput.jsx","components/Contacts/AddContact.jsx","components/NotFound.jsx","components/Test/Test.jsx","components/Contacts/EditContact.jsx","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showInfo","showInfoHandler","onDeleteClick","a","delete","console","log","name","email","phone","onClick","to","style","color","marginRight","bind","cursor","Contacts","Header","branding","TextInput","label","placeholder","onChange","error","htmlFor","defaultProps","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","NotFound","Test","body","title","fetch","then","response","json","EditContact","updateContact","match","params","put","App","basename","process","className","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3968f71e.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport axios from \"axios\"\nconst Context = React.createContext();\n\n// reducer have all the logic \n\nconst reducer = (state, action) => { \n    switch(action.type){\n        case \"DELETE_CONTACT\":\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact =>\n                    contact.id !== action.payload)\n            }\n\n        case \"ADD_CONTACT\":\n            return {\n                ...state,\n                contacts: [action.payload, \n                ...state.contacts]\n            }\n        case \"UPDATE_CONTACT\":\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload): contact)\n            }    \n        default:\n            return state;\n    }\n}\n\n\nexport class Provider extends Component { \n    state = {\n        contacts: [],\n        dispatch: action => this.setState(state => reducer(state, action))\n    }\n\n   async componentDidMount() {\n        const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\")\n        this.setState({contacts: res.data}); \n    }\n\n    render(){\n        return(\n           <Context.Provider value = {this.state}>\n            {this.props.children}\n           </Context.Provider> \n        )\n    }\n}\n\nexport const Consumer = Context.Consumer; ","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Consumer } from \"../../Context1\";\nimport axios from \"axios\"\nimport CreateIcon from '@material-ui/icons/Create';\nimport {NavLink} from \"react-router-dom\"; \n\nclass Contact extends Component {\n    state = {\n        showInfo: false\n    }\n\n    showInfoHandler = () =>  {\n        this.setState({showInfo: !this.state.showInfo})\n     }\n\n     onDeleteClick = async (id, dispatch) => { \n        //  console.log(id);\n        try{\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n        dispatch({\n            type: \"DELETE_CONTACT\",\n            payload: id\n        })\n        }\n        catch(err){\n            console.log(err); \n        }\n        \n         \n     }\n\n    render() {\n        const {name ,email ,phone ,id} = this.props.contact;\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                   \n                    return (\n                        <div>\n                <h4>{name}  <ExpandMoreIcon  onClick = {this.showInfoHandler}/> <NavLink to = {`contact/edit/${id}`}>\n                <CreateIcon style ={{color:\"green\", marginRight:\"10px\"}}/> \n                </NavLink>\n                <DeleteIcon onClick = {this.onDeleteClick.bind(this, id, dispatch)} style ={{color:\"red\", cursor:\"pointer\"}} />  </h4>\n                {this.state.showInfo ? \n               ( <ul>\n                    <li>Email:{email}</li>\n                    <li>Phone:{phone}</li>\n                </ul>)\n                :null}\n            </div>\n                    )\n                }}\n            </Consumer>\n            \n        )\n    }\n}\n\nContact.propTypes = {\n    name: PropTypes.string.isRequired, \n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired\n};\n\nexport default Contact; ","import React, { Component } from 'react'\nimport Contact from \"./Contact\"\n\nimport { Consumer } from \"../../Context1\"\n\n class Contacts extends Component {\n  \n   \n    render(){\n        return (\n            <Consumer>\n                {value => {\n                    return(\n                        <div>\n        {\n            value.contacts.map(contact => {\n                return (\n                    <Contact \n                        contact = {contact}\n                    />\n                )\n            })\n        }\n    </div>\n                        \n                    )\n                }}\n            </Consumer>\n        )\n    }\n   \n    \n}\nexport default Contacts; \n\n","import React from \"react\"\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\"\n\nconst Header = (props) => { \n    \n    return (\n        <div>\n            <h1>{props.branding}</h1>\n            <div>\n            <div>\n\n            </div>\n            <div>\n                <nav>\n                    <NavLink to = \"/\">Home</NavLink>\n                    <NavLink to = \"AddContact\">Add Contact</NavLink>\n                  \n                </nav>\n            </div>\n            </div>\n            \n        </div>\n    )\n}\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n}\n\n\nexport default Header; ","import React from 'react'\nimport PropTypes from 'prop-types'\n\n const TextInput = ({label, name, type, placeholder,onChange, value, error }) => {\n       \n    return (\n        <div>\n            <label htmlFor = {name}>{label}</label>\n            <input type = {type} placeholder = {placeholder} name = {name} onChange = {onChange} value = {value}/>\n        </div>\n    )\n}\nTextInput.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type : PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n\n\n}\nTextInput.defaultProps = {\n    type: \"text\"\n}\n\nexport default TextInput;\n","import React, { Component } from 'react'\nimport { Consumer  } from \"../../Context1\"\n// import uuid from \"react-uuid\"; \nimport TextInput from \"../Layout/TextInput\"\nimport axios from \"axios\"\n\nclass AddContact extends Component {\n\n    state = {\n        name:\"\", \n        email:\"\",\n        phone:\"\",\n        errors: {}\n    }\n\n    onChange = (e) => { \n        this.setState({[e.target.name]:e.target.value})\n    }\n\n    onSubmit = async (dispatch, e) => { \n        e.preventDefault(); \n        // console.log(this.state);\n        const { name, email, phone } = this.state;\n        \n        // check for Errors \n        if(name === ''){\n            this.setState({errors: {name: \"name is required\"}}); \n            return;\n        }\n        if(email === ''){\n            this.setState({errors: {email: \"email is required\"}}); \n            return;\n        }\n        if(phone === ''){\n            this.setState({errors: {phone: \"phone is required\"}}); \n            return;\n        }\n        const newContact = {\n            name,\n            email,\n            phone,\n\n        }\n        // console.log(newContact);\n       const res  = await axios.post(\"https://jsonplaceholder.typicode.com/users\", newContact)\n        dispatch({\n            type: \"ADD_CONTACT\", \n            payload: res.data\n        })\n        \n        this.setState({\n            name:\"\",\n            email:\"\",\n            phone:\"\",\n            errors: {}\n        })\n\n        this.props.history.push(\"/\");\n\n    }\n    render() {\n        const {name, email, phone, errors} = this.state;\n\n        return(\n            <Consumer>\n                {value => {\n                    const {dispatch} = value; \n                    return (\n                            <div>\n                            <form onSubmit = {this.onSubmit.bind(this, dispatch)}>\n                                    <TextInput \n                                        label = \"Name\"\n                                        name = \"name\"\n                                        placeholder = \"Enter Name\"\n                                        value = {name}\n                                        onChange = {this.onChange}\n                                        error = {errors.name}\n                                    /><br/>\n\n                                    <TextInput \n                                        label = \"email\"\n                                        name = \"email\"\n                                        type = \"email\"\n                                        placeholder = \"Enter email\"\n                                        value = {email}\n                                        onChange = {this.onChange}\n                                        error = {errors.email}\n                                    /><br/>\n                                    <TextInput \n                                        label = \"Phone\"\n                                        name = \"phone\"\n                                        placeholder = \"Enter phone\"\n                                        value = {phone}\n                                        onChange = {this.onChange}\n                                        error = {errors.phone}\n                                    /><br/>\n\n\n                                    {/* /* <label htmlFor = \"name\">Name:</label>\n                                    <input type = \"text\" placeholder = 'enter name' name = \"name\" onChange = {this.onchange} value = {name}/><br/>\n                                    <label htmlFor = \"email\">Email:</label>\n                                    <input type = \"text\" placeholder = 'enter email' name = \"email\" onChange = {this.onchange} value = {email}/><br/>\n                                    <label htmlFor = \"Phone\">Phone:</label>\n                                    <input type = \"Number\" placeholder = 'enter Phone' name = \"phone\" onChange = {this.onchange} value = {phone}/><br/> */}\n                                    <input type = \"submit\" value = \"add contact\"/> \n                            </form>\n                            </div>\n                    )\n                }}\n            </Consumer>\n        )\n        \n    }\n}\n\nexport default AddContact; \n","import React from 'react'\n\nconst  NotFound = () =>  {\n    return (\n        <div>\n            <h1>wrong pages</h1>\n        </div>\n    )\n}\nexport default NotFound;\n","import React, { Component } from 'react'\nclass Test extends Component {\n    state = {\n        body:\"\", \n        title:\"\"\n    }\n    \n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\n  .then(response => response.json())\n  .then(json => {\n      this.setState({title: json.title,\n    body: json.body})\n  })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>{this.state.title}</h1>\n                <p>{this.state.body}</p>\n            </div>\n        )\n    }\n}\n\nexport default Test;","import React, { Component } from 'react'\nimport { Consumer  } from \"../../Context1\"\n// import uuid from \"react-uuid\"; \nimport TextInput from \"../Layout/TextInput\"\nimport axios from \"axios\"\n\nclass EditContact extends Component {\n\n    state = {\n        name:\"\", \n        email:\"\",\n        phone:\"\",\n        errors: {}\n    }\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\n        const contact = res.data; \n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        })\n    }\n\n    onChange = (e) => { \n        this.setState({[e.target.name]:e.target.value})\n    }\n\n    onSubmit = async (dispatch, e) => { \n        e.preventDefault(); \n        // console.log(this.state);\n        const { name, email, phone } = this.state;\n        \n        // check for Errors \n        if(name === ''){\n            this.setState({errors: {name: \"name is required\"}}); \n            return;\n        }\n        if(email === ''){\n            this.setState({errors: {email: \"email is required\"}}); \n            return;\n        }\n        if(phone === ''){\n            this.setState({errors: {phone: \"phone is required\"}}); \n            return;\n        }\n\n        const updateContact = {\n            name, \n            email,\n            phone\n        }\n\n        const { id } = this.props.match.params;\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact); \n        dispatch({\n            type: \"UPDATE_CONTACT\",\n            payload: res.data\n        })\n\n        this.setState({\n            name:\"\",\n            email:\"\",\n            phone:\"\",\n            errors: {}\n        })\n\n        this.props.history.push(\"/\");\n\n    }\n    render() {\n        const {name, email, phone, errors} = this.state;\n\n        return(\n            <Consumer>\n                {value => {\n                    const {dispatch} = value; \n                    return (\n                            <div>\n                            <form onSubmit = {this.onSubmit.bind(this, dispatch)}>\n                                    <TextInput \n                                        label = \"Name\"\n                                        name = \"name\"\n                                        placeholder = \"Enter Name\"\n                                        value = {name}\n                                        onChange = {this.onChange}\n                                        error = {errors.name}\n                                    /><br/>\n\n                                    <TextInput \n                                        label = \"email\"\n                                        name = \"email\"\n                                        type = \"email\"\n                                        placeholder = \"Enter email\"\n                                        value = {email}\n                                        onChange = {this.onChange}\n                                        error = {errors.email}\n                                    /><br/>\n                                    <TextInput \n                                        label = \"Phone\"\n                                        name = \"phone\"\n                                        placeholder = \"Enter phone\"\n                                        value = {phone}\n                                        onChange = {this.onChange}\n                                        error = {errors.phone}\n                                    /><br/>\n\n\n                                    {/* /* <label htmlFor = \"name\">Name:</label>\n                                    <input type = \"text\" placeholder = 'enter name' name = \"name\" onChange = {this.onchange} value = {name}/><br/>\n                                    <label htmlFor = \"email\">Email:</label>\n                                    <input type = \"text\" placeholder = 'enter email' name = \"email\" onChange = {this.onchange} value = {email}/><br/>\n                                    <label htmlFor = \"Phone\">Phone:</label>\n                                    <input type = \"Number\" placeholder = 'enter Phone' name = \"phone\" onChange = {this.onchange} value = {phone}/><br/> */}\n                                    <input type = \"submit\" value = \"update contact\"/> \n                            </form>\n                            </div>\n                    )\n                }}\n            </Consumer>\n        )\n        \n    }\n}\n\nexport default EditContact; \n","\nimport './App.css';\nimport Contacts from \"./components/Contacts/Contacts\"\nimport Header from \"./components/Layout/Header\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\"; \n\n// import { Provider } from \"./Context\"\nimport { Provider } from \"./Context1\"; \nimport AddContact from \"./components/Contacts/AddContact\"\nimport NotFound from \"./components/NotFound\"\nimport Test from \"./components/Test/Test\"\nimport EditContact from \"./components/Contacts/EditContact\"\nfunction App() {\n  return (\n    <Provider>\n    <Router basename = {process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Header branding = \"Contact Manager\" />\n        <Switch>\n          <Route exact path = '/' component = {Contacts}/>\n          <Route exact path = \"/AddContact\" component = {AddContact}/>\n          <Route exact path = \"/contact/edit/:id\" component = {EditContact}/>\n          <Route exact path = \"/test\" component = {Test}/>\n          <Route component ={NotFound}/>\n        </Switch>\n      </div>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}